{"version":3,"sources":["components/Header/Header.module.css","components/Main/Main.module.css","components/Main/Main.jsx","components/Header/Header.jsx","api/api.js","redux/auth.js","components/Header/HeaderContainer.jsx","components/Main/Registration/Registration.jsx","components/Main/Users/Users.jsx","redux/users.js","components/Main/Users/UsersContainer.jsx","hoc/WithAuthRedirect.js","components/Main/Login/Login.jsx","components/Main/Login/LoginContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Main","className","s","main","Component","Header","logout","props","authUI","this","isAuth","list","onClick","to","header","instance","axios","withCredentials","usersAPI","get","then","response","data","id","delete","authAPI","login","password","post","initialState","setAuth","auth","type","reducer","state","action","HeaderContainer","connect","dispatch","Registration","loginInp","React","createRef","emailInp","passInp","passRepeatInp","register","current","value","email","success","setState","redirect","alert","catch","colSpan","placeholder","ref","Users","deleteUser","getUsers","usersUI","users","map","u","key","user_id","filter","elem","UsersContainer","compose","setUsers","Login","enter","LoginContainer","App","componentDidMount","getMyAuth","path","component","exact","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.20d6ade5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yogj\",\"list\":\"Header_list__3P-lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3mAp_\"};","import React, { Component } from 'react';\r\nimport s from './Main.module.css';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.main}>\r\n        Main\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component { \r\n  \r\n  logout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    let authUI = this.props.isAuth\r\n      ? (<ul className={s.list}><li><button onClick={this.logout}>Выйти</button></li></ul>) \r\n      : (<ul className={s.list}><li><NavLink to=\"/login\">Логин</NavLink></li><li><NavLink to=\"/registration\">Регистрация</NavLink></li></ul>)\r\n\r\n    return (\r\n      <div className={s.header}>\r\n        <ul className={s.list}>\r\n          <li>Header</li>\r\n          <li>{this.props.isAuth?\"Да\":\"Нет\"}</li>\r\n          <li><NavLink to=\"/users\">Ползователи</NavLink></li>\r\n          <li><NavLink to=\"/\">Главная</NavLink></li>          \r\n        </ul>\r\n        {authUI}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  //baseURL: 'http://localhost:3000',\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers: () => {\r\n    return instance.get(`/api/users`)\r\n      .then(response => response.data);\r\n  },\r\n  deleteUser: (id) => {\r\n    return instance.delete(`/api/users/${id}`)\r\n      .then(response => response.data);\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  login: (login,password) => {\r\n    return instance.post('/api/login',{login,password});\r\n  },\r\n  logout: () => {\r\n    return instance.delete('/api/login');\r\n  },\r\n  getMyAuth: () => {\r\n    return instance.get('/api/login');\r\n  }\r\n}","import {authAPI} from '../api/api';\r\n\r\n// *** *** *** ТИПЫ ДЕЙСТВИЙ *** *** ***\r\nconst SET_AUTH = \"SET_AUTH\";\r\n// *** *** *** ***  ***  *** *** *** ***\r\n\r\n// *** *** НАЧАЛЬНОЕ СОСТОЯНИЕ *** ***\r\nlet initialState = {\r\n  isAuth: false\r\n};\r\n// *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** *** РЕДЮСЕР *** *** *** ***\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case SET_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.auth\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n// *** *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** ЭТО ДИСПАТЧИЛКИ *** *** *** (устанавливают значения в сторе)\r\nconst setAuth = (auth) => ({type: SET_AUTH, auth});\r\n// *** *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** САНОЧКИ *** *** ***\r\nexport const login = (login,password) => {\r\n  return (dispatch) => {\r\n    authAPI.login(login,password).then((response)=>{\r\n      if (response.data.success===1)\r\n        dispatch(setAuth(true));\r\n    });\r\n  }\r\n}\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    authAPI.logout().then(()=>{\r\n      dispatch(setAuth(false))\r\n    });\r\n  }\r\n}\r\nexport const getMyAuth = () => {\r\n  return (dispatch) => {\r\n    authAPI.getMyAuth().then((response)=>{\r\n      dispatch(setAuth(response.data.success===1));\r\n    })\r\n  }\r\n}\r\n// *** *** *** *** *** *** *** ***\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from './Header';\r\nimport {logout} from '../../redux/auth';\r\n\r\nclass HeaderContainer extends Component { \r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mstp = (state) =>{\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mstp,{logout})(HeaderContainer);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Registration extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  loginInp = React.createRef();\r\n  emailInp = React.createRef();\r\n  passInp = React.createRef();\r\n  passRepeatInp = React.createRef();\r\n\r\n  register = () => {\r\n    let data = {\r\n      login: this.loginInp.current.value,\r\n      email: this.emailInp.current.value,\r\n      passInp: this.passInp.current.value,\r\n      passRepeatInp: this.passRepeatInp.current.value\r\n    };\r\n    \r\n    axios.post('/registrate',data)\r\n      .then((response)=>{\r\n        if (response.data.success === 1){\r\n          this.setState({redirect:true})\r\n        }else{\r\n          alert('err');\r\n        }\r\n\r\n      })\r\n      .catch((data)=>{\r\n        alert('negood');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect)\r\n      return <Redirect to=\"/login\"/>\r\n\r\n\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"2\">Регистрация</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Логин</td>\r\n              <td><input placeholder=\"Логин\" ref={this.loginInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Email</td>\r\n              <td><input placeholder=\"Email\" ref={this.emailInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Пароль</td>\r\n              <td><input type=\"password\" placeholder=\"Пароль\" ref={this.passInp} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Повторите пароль</td>\r\n              <td><input type=\"password\" placeholder=\"Пароль\" ref={this.passRepeatInp}/></td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colSpan=\"2\"><button onClick={this.register}>Зарегистрироваться</button></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\n\r\nclass Users extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n  }\r\n  delete = (id) => {\r\n    this.props.deleteUser(id);\r\n  }\r\n\r\n  render() {\r\n    let usersUI = null;\r\n    if (this.props.users)\r\n      usersUI = this.props.users.map((u,key) => <tr key={key}>\r\n        <td>{u.user_id}</td>\r\n        <td>{u.login}</td>\r\n        <td>{u.email}</td>\r\n        <td><button onClick={()=>{this.delete(u.user_id)}}>Delete</button></td>\r\n      </tr>)\r\n\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr><th>Id</th><th>Login</th><th>Email</th><th>Delete</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {usersUI}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;","import {usersAPI} from '../api/api';\r\n\r\n// *** *** *** ТИПЫ ДЕЙСТВИЙ *** *** ***\r\nconst SET_USERS = \"SET_USERS\";\r\nconst DELETE_USER = \"DELETE_USER\";\r\n// *** *** *** ***  ***  *** *** *** ***\r\n\r\n// *** *** НАЧАЛЬНОЕ СОСТОЯНИЕ *** ***\r\nlet initialState = {\r\n  users: []\r\n};\r\n// *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** *** РЕДЮСЕР *** *** *** ***\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case DELETE_USER: {\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(elem => elem.user_id !== action.user_id)\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n// *** *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** ЭТО ДИСПАТЧИЛКИ *** *** *** (устанавливают значения в сторе)\r\nconst setUsers = (users) => ({type: SET_USERS, users});\r\nconst deleteUserDispatch = (user_id) => ({type:DELETE_USER, user_id })\r\n// *** *** *** *** *** *** *** *** *** ***\r\n\r\n// *** *** *** САНОЧКИ *** *** ***\r\nexport const getUsers = () => {\r\n  return (dispatch) => {\r\n    usersAPI.getUsers().then((response)=>{\r\n      dispatch(setUsers(response.data));\r\n    });\r\n  }\r\n}\r\nexport const deleteUser = (id) => {\r\n  return (dispatch) => {\r\n    usersAPI.deleteUser(id).then(() =>{\r\n      dispatch(deleteUserDispatch(id));\r\n    })\r\n  }\r\n}\r\n// *** *** *** *** *** *** *** ***\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport { withAuthRedirect } from '../../../hoc/WithAuthRedirect';\r\nimport {getUsers,deleteUser} from '../../../redux/users';\r\n\r\nclass UsersContainer extends Component {\r\n  render() {\r\n    return <Users {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mstp = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    users: state.users.users\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mstp,\r\n    {\r\n      getUsers,\r\n      deleteUser\r\n    }),\r\n  withAuthRedirect\r\n)(UsersContainer);","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component{\r\n    render() {\r\n      if (!this.props.isAuth)\r\n        return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  return RedirectComponent;\r\n}","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n\r\n  loginInp = React.createRef();\r\n  passInp = React.createRef();\r\n\r\n  enter = () => {\r\n    this.props.login(\r\n      this.loginInp.current.value,\r\n      this.passInp.current.value\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead><tr><th colSpan=\"2\">Войти</th></tr></thead>\r\n          <tbody>\r\n            <tr><td>Логин</td><td><input ref={this.loginInp} /></td></tr>\r\n            <tr><td>Пароль</td><td><input ref={this.passInp} type=\"password\" /></td></tr>\r\n          </tbody>\r\n          <tfoot><tr><td colSpan=\"2\"><button onClick={this.enter}>Войти</button></td></tr></tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../../redux/auth';\r\n\r\nclass LoginContainer extends Component {\r\n  render() {\r\n    return (<Login {...this.props} />);\r\n  }\r\n}\r\n\r\nlet mstp = (state) =>{\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\nexport default connect(mstp,{login})(LoginContainer);","import React from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Header from './components/Header/HeaderContainer';\nimport {Route} from 'react-router-dom';\nimport Registration from './components/Main/Registration/Registration';\nimport Users from './components/Main/Users/UsersContainer';\nimport Login from './components/Main/Login/LoginContainer';\nimport {connect} from 'react-redux';\nimport {getMyAuth} from '../src/redux/auth';\n\nclass App extends React.Component {\n\n  componentDidMount = () => {\n    this.props.getMyAuth();\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n          <Header/>\n        </header>\n        <main>\n          <Route path=\"/registration\" component={Registration}/>\n          <Route path=\"/users\" component={Users}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/\" component={Main} exact/>\n        </main>\n      </div>\n    );\n  }\n}\n\nlet mstp = (state) => {\n  return {\n    isAuth: state.auth.isAuth  \n  }\n};\n\nexport default connect(mstp,{getMyAuth})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore,combineReducers,applyMiddleware} from  'redux'; //\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport users from './users';\r\nimport auth from './auth';\r\n\r\nlet reducers = combineReducers({\r\n  users,\r\n  auth\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}